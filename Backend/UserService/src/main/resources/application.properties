spring.application.name=UserService
server.port=8081

# Database
spring.datasource.url=jdbc:mysql://localhost:3306/user_service
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.datasource.username=root
spring.datasource.password=1234

# auto create table
spring.jpa.hibernate.ddl-auto=update
# show sql
spring.jpa.show-sql=true
#format sql
spring.jpa.properties.hibernate.format_sql=true

# Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.healthcheck.enabled=true

# actuator
management.endpoints.web.exposure.include=*
management.endpoints.web.discovery.enabled=true

#Terminal Outputs
spring.main.banner-mode=off
logging.level.org.springframework=ERROR
logging.level.org.hibernate=ERROR
#Firebase constants
firebase.bucket.name=social-media-426720.appspot.com
firebase.keystore.path=Backend/UserService/src/main/resources/social-media-426720-firebase-adminsdk-6mlkv-fab9e28ace.json


# kafka
# Producer configuration for user-topic
#spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=event:org.spring.userservice.events.UserRegistrationEvent

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=user-topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:org.spring.userservice.events.UserRegistrationEvent

